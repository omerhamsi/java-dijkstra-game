/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication61;

import java.awt.Color;
import java.awt.Image;
import java.awt.Label;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author TOSHIBA
 */
public class deneme extends javax.swing.JFrame {

    karakter oyuncu;
    ArrayList<String> enemys_name=new ArrayList<>();
    ArrayList<String> enemys_gate=new ArrayList<>();
    List<List<Vertex>> path = new ArrayList<>();
    ArrayList<JLabel> start=new ArrayList();
    ArrayList<JLabel> enemy=new ArrayList();
    oyuncu puanlar;
    JLabel hidden;
    JLabel[][] label1=new JLabel[11][13];
    JLabel[] white=new JLabel[74];
    Image img;
    obje altÄ±n;
    obje mantar;
    Image goldenimg;
    Image mantarimg;
    int puan=20;
    char[][] maps=new char[11][13];
    int a,b,c,z,w,g;
    int d=5;
    int f=6;
    int m=5;
    int q;
    int p;
       int x=5;
       int y=6;
       
       ArrayList<Vertex> dugum=new ArrayList<>();
       Vertex vertex1;
       Vertex vertex2;
       Vertex vertex3;
       Vertex vertex4;
       Vertex vertex5;
       Vertex vertex6;
       Vertex vertex7;
       Vertex vertex8;
       Vertex vertex9;
       Vertex vertex10;
       Vertex vertex11;
       Vertex vertex12;
       Vertex vertex13;
       Vertex vertex14;
       Vertex vertex15;
       Vertex vertex16;
       Vertex vertex17;
       Vertex vertex18;
       Vertex vertex19;
       Vertex vertex20;
       Vertex vertex21;
       Vertex vertex22;
       Vertex vertex23;
       Vertex vertex24;
       Vertex vertex25;
       Vertex vertex26;
       Vertex vertex27;
       Vertex vertex28;
       Vertex vertex29;
       Vertex vertex30;
       Vertex vertex31;
       Vertex vertex32;
      Vertex vertex33;
       Vertex vertex34;
       Vertex vertex35;
       Vertex vertex36;
       Vertex vertex37;
       Vertex vertex38;
       Vertex vertex39;
       Vertex vertex40;
       Vertex vertex41;
       Vertex vertex42;
       Vertex vertex43;
       Vertex vertex44;
       Vertex vertex45;
       Vertex vertex46;
       Vertex vertex47;
       Vertex vertex48;
       Vertex vertex49;
       Vertex vertex50;
       Vertex vertex51;
       Vertex vertex52;
       Vertex vertex53;
       Vertex vertex54;
       Vertex vertex55;
       Vertex vertex56;
       Vertex vertex57;
       Vertex vertex58;
       Vertex vertex59;
       Vertex vertex60;
       Vertex vertex61;
       Vertex vertex62;
       Vertex vertex63;
       Vertex vertex64;
       Vertex vertex65;
       Vertex vertex66;
       Vertex vertex67;
       Vertex vertex68;
      Vertex vertex69;
       Vertex vertex70;
       Vertex vertex71;
       Vertex vertex72;
       Vertex vertex73;
       Vertex vertex74;
       Vertex vertex75;
       Vertex vertex76;
       Vertex vertex77;
       Vertex vertex78;
       
    public deneme(char[][] maps,ArrayList<String> enemys_name,ArrayList<String> enemys_gate) {
        this.enemys_name=enemys_name;
        this.enemys_gate=enemys_gate;
        this.maps=maps;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jlabel1 = new javax.swing.JLabel();
        jlabel2 = new javax.swing.JLabel();
        jlabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jlabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jlabel5 = new javax.swing.JLabel();
        jlabel6 = new javax.swing.JLabel();
        jlabel7 = new javax.swing.JLabel();
        jlabel8 = new javax.swing.JLabel();
        jlabel9 = new javax.swing.JLabel();
        jlabel10 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jlabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jlabel12 = new javax.swing.JLabel();
        jlabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jlabel14 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jlabel15 = new javax.swing.JLabel();
        jlabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jlabel23 = new javax.swing.JLabel();
        jlabel24 = new javax.swing.JLabel();
        jlabel25 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jlabel26 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jlabel28 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jlabel29 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jlabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jPanel27 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jPanel32 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jPanel36 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        jPanel37 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jPanel38 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jPanel39 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jPanel41 = new javax.swing.JPanel();
        jLabel68 = new javax.swing.JLabel();
        jPanel42 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        jPanel43 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jPanel44 = new javax.swing.JPanel();
        jLabel73 = new javax.swing.JLabel();
        jPanel45 = new javax.swing.JPanel();
        jLabel74 = new javax.swing.JLabel();
        jPanel46 = new javax.swing.JPanel();
        jLabel75 = new javax.swing.JLabel();
        jPanel47 = new javax.swing.JPanel();
        jLabel76 = new javax.swing.JLabel();
        jPanel48 = new javax.swing.JPanel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jPanel49 = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jPanel50 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jPanel51 = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jPanel52 = new javax.swing.JPanel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jPanel53 = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jPanel54 = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        jPanel55 = new javax.swing.JPanel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jPanel56 = new javax.swing.JPanel();
        jLabel92 = new javax.swing.JLabel();
        jPanel57 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jPanel58 = new javax.swing.JPanel();
        jLabel94 = new javax.swing.JLabel();
        jPanel59 = new javax.swing.JPanel();
        jLabel95 = new javax.swing.JLabel();
        jPanel60 = new javax.swing.JPanel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jPanel61 = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jPanel62 = new javax.swing.JPanel();
        jLabel107 = new javax.swing.JLabel();
        jPanel63 = new javax.swing.JPanel();
        jLabel108 = new javax.swing.JLabel();
        jPanel64 = new javax.swing.JPanel();
        jLabel109 = new javax.swing.JLabel();
        jPanel65 = new javax.swing.JPanel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jPanel66 = new javax.swing.JPanel();
        jLabel115 = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        jPanel67 = new javax.swing.JPanel();
        jLabel118 = new javax.swing.JLabel();
        jPanel68 = new javax.swing.JPanel();
        jLabel119 = new javax.swing.JLabel();
        jPanel69 = new javax.swing.JPanel();
        jLabel120 = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        jLabel124 = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        jLabel129 = new javax.swing.JLabel();
        jLabel130 = new javax.swing.JLabel();
        jPanel70 = new javax.swing.JPanel();
        jLabel131 = new javax.swing.JLabel();
        jPanel71 = new javax.swing.JPanel();
        jLabel132 = new javax.swing.JLabel();
        jLabel133 = new javax.swing.JLabel();
        jLabel134 = new javax.swing.JLabel();
        jPanel73 = new javax.swing.JPanel();
        jLabel136 = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        jLabel141 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel135 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        skor_tabela = new javax.swing.JLabel();
        jPanel74 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 500));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel5.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        jlabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel1.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel1.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel1.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel3.add(jlabel1);

        jlabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel2.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel2.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel2.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel3.add(jlabel2);

        jlabel3.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel3.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel3.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel3.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel3.add(jlabel3);

        jPanel5.add(jPanel3);
        jPanel3.setBounds(20, 30, 180, 60);

        jPanel1.setBackground(new java.awt.Color(255, 0, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(40, 40));
        jPanel1.setMinimumSize(new java.awt.Dimension(40, 40));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jlabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlabel4.setForeground(new java.awt.Color(0, 0, 0));
        jlabel4.setText("  A");
        jlabel4.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jlabel4.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel4.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel4.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel1.add(jlabel4);

        jPanel5.add(jPanel1);
        jPanel1.setBounds(200, 30, 60, 60);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jlabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel5.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel5.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel5.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel5);

        jlabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel6.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel6.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel6.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel6);

        jlabel7.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel7.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel7.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel7.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel7);

        jlabel8.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel8.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel8.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel8.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel8);

        jlabel9.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel9.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel9.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel9.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel9);

        jlabel10.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel10.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel10.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel10.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel4.add(jlabel10);

        jPanel5.add(jPanel4);
        jPanel4.setBounds(260, 30, 360, 60);

        jPanel8.setBackground(new java.awt.Color(204, 0, 153));
        jPanel8.setMaximumSize(new java.awt.Dimension(60, 60));
        jPanel8.setMinimumSize(new java.awt.Dimension(60, 60));
        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        jlabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlabel11.setForeground(new java.awt.Color(0, 0, 0));
        jlabel11.setText("  B");
        jlabel11.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel11.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel11.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel11.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel8.add(jlabel11);

        jPanel5.add(jPanel8);
        jPanel8.setBounds(620, 30, 60, 60);

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        jlabel12.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel12.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel12.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel12.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel6.add(jlabel12);

        jlabel13.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel13.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel13.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel13.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel6.add(jlabel13);

        jPanel5.add(jPanel6);
        jPanel6.setBounds(680, 30, 120, 60);

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.LINE_AXIS));

        jlabel14.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel14.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel14.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel14.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel7.add(jlabel14);

        jPanel5.add(jPanel7);
        jPanel7.setBounds(20, 90, 60, 60);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        jlabel15.setBackground(new java.awt.Color(255, 255, 255));
        jlabel15.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel15.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel15.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel15.setOpaque(true);
        jlabel15.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel9.add(jlabel15);

        jlabel16.setBackground(new java.awt.Color(255, 255, 255));
        jlabel16.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel16.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel16.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel16.setOpaque(true);
        jlabel16.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel9.add(jlabel16);

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel17.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel17.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel17.setOpaque(true);
        jLabel17.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel9.add(jLabel17);

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel18.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel18.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel18.setOpaque(true);
        jLabel18.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel9.add(jLabel18);

        jPanel5.add(jPanel9);
        jPanel9.setBounds(80, 90, 240, 60);

        jPanel11.setBackground(new java.awt.Color(51, 51, 51));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        jLabel19.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel19.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel19.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel19.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel11.add(jLabel19);

        jPanel5.add(jPanel11);
        jPanel11.setBounds(320, 90, 60, 60);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new javax.swing.BoxLayout(jPanel10, javax.swing.BoxLayout.LINE_AXIS));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel20.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel20.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel20.setOpaque(true);
        jLabel20.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jLabel20);

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel21.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel21.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel21.setOpaque(true);
        jLabel21.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jLabel21);

        jLabel22.setBackground(new java.awt.Color(255, 255, 255));
        jLabel22.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel22.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel22.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel22.setOpaque(true);
        jLabel22.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jLabel22);

        jlabel23.setBackground(new java.awt.Color(255, 255, 255));
        jlabel23.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel23.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel23.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel23.setOpaque(true);
        jlabel23.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jlabel23);

        jlabel24.setBackground(new java.awt.Color(255, 255, 255));
        jlabel24.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel24.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel24.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel24.setOpaque(true);
        jlabel24.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jlabel24);

        jlabel25.setBackground(new java.awt.Color(255, 255, 255));
        jlabel25.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel25.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel25.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel25.setOpaque(true);
        jlabel25.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel10.add(jlabel25);

        jPanel5.add(jPanel10);
        jPanel10.setBounds(380, 90, 360, 60);

        jPanel12.setBackground(new java.awt.Color(51, 51, 51));
        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));

        jlabel26.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel26.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel26.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel26.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel12.add(jlabel26);

        jPanel5.add(jPanel12);
        jPanel12.setBounds(740, 90, 60, 60);

        jPanel13.setBackground(new java.awt.Color(51, 51, 51));
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        jLabel27.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel27.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel27.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel27.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel13.add(jLabel27);

        jPanel5.add(jPanel13);
        jPanel13.setBounds(20, 150, 60, 60);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        jlabel28.setBackground(new java.awt.Color(255, 255, 255));
        jlabel28.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel28.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel28.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel28.setOpaque(true);
        jlabel28.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel14.add(jlabel28);

        jPanel5.add(jPanel14);
        jPanel14.setBounds(80, 150, 60, 60);

        jPanel15.setBackground(new java.awt.Color(51, 51, 51));
        jPanel15.setLayout(new javax.swing.BoxLayout(jPanel15, javax.swing.BoxLayout.LINE_AXIS));

        jlabel29.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel29.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel29.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel29.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel15.add(jlabel29);

        jPanel5.add(jPanel15);
        jPanel15.setBounds(140, 150, 60, 60);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setLayout(new javax.swing.BoxLayout(jPanel16, javax.swing.BoxLayout.LINE_AXIS));

        jlabel30.setBackground(new java.awt.Color(255, 255, 255));
        jlabel30.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jlabel30.setMaximumSize(new java.awt.Dimension(60, 60));
        jlabel30.setMinimumSize(new java.awt.Dimension(60, 60));
        jlabel30.setOpaque(true);
        jlabel30.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jlabel30);

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel31.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel31.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel31.setOpaque(true);
        jLabel31.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jLabel31);

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel32.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel32.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel32.setOpaque(true);
        jLabel32.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jLabel32);

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel33.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel33.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel33.setOpaque(true);
        jLabel33.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jLabel33);

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel34.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel34.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel34.setOpaque(true);
        jLabel34.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jLabel34);

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel35.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel35.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel35.setOpaque(true);
        jLabel35.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel16.add(jLabel35);

        jPanel5.add(jPanel16);
        jPanel16.setBounds(200, 150, 360, 60);

        jPanel17.setBackground(new java.awt.Color(51, 51, 51));
        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));

        jLabel36.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel36.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel36.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel36.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel17.add(jLabel36);

        jLabel37.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel37.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel37.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel37.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel17.add(jLabel37);

        jPanel5.add(jPanel17);
        jPanel17.setBounds(560, 150, 120, 60);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setLayout(new javax.swing.BoxLayout(jPanel18, javax.swing.BoxLayout.LINE_AXIS));

        jLabel38.setBackground(new java.awt.Color(255, 255, 255));
        jLabel38.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel38.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel38.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel38.setOpaque(true);
        jLabel38.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel18.add(jLabel38);

        jPanel5.add(jPanel18);
        jPanel18.setBounds(680, 150, 60, 60);

        jPanel19.setBackground(new java.awt.Color(51, 51, 51));
        jPanel19.setLayout(new javax.swing.BoxLayout(jPanel19, javax.swing.BoxLayout.LINE_AXIS));

        jLabel39.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel39.setInheritsPopupMenu(false);
        jLabel39.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel39.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel39.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel19.add(jLabel39);

        jPanel5.add(jPanel19);
        jPanel19.setBounds(740, 150, 60, 60);

        jPanel20.setBackground(new java.awt.Color(51, 51, 51));
        jPanel20.setLayout(new javax.swing.BoxLayout(jPanel20, javax.swing.BoxLayout.LINE_AXIS));

        jLabel40.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel40.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel40.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel40.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel20.add(jLabel40);

        jPanel5.add(jPanel20);
        jPanel20.setBounds(20, 210, 60, 60);

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setLayout(new javax.swing.BoxLayout(jPanel21, javax.swing.BoxLayout.LINE_AXIS));

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel41.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel41.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel41.setOpaque(true);
        jLabel41.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel21.add(jLabel41);

        jLabel42.setBackground(new java.awt.Color(255, 255, 255));
        jLabel42.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel42.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel42.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel42.setOpaque(true);
        jLabel42.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel21.add(jLabel42);

        jLabel43.setBackground(new java.awt.Color(255, 255, 255));
        jLabel43.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel43.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel43.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel43.setOpaque(true);
        jLabel43.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel21.add(jLabel43);

        jLabel44.setBackground(new java.awt.Color(255, 255, 255));
        jLabel44.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel44.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel44.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel44.setOpaque(true);
        jLabel44.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel21.add(jLabel44);

        jPanel5.add(jPanel21);
        jPanel21.setBounds(80, 210, 240, 60);

        jPanel22.setBackground(new java.awt.Color(51, 51, 51));
        jPanel22.setLayout(new javax.swing.BoxLayout(jPanel22, javax.swing.BoxLayout.LINE_AXIS));

        jLabel45.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel45.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel45.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel45.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel22.add(jLabel45);

        jPanel5.add(jPanel22);
        jPanel22.setBounds(320, 210, 60, 60);

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));
        jPanel23.setLayout(new javax.swing.BoxLayout(jPanel23, javax.swing.BoxLayout.LINE_AXIS));

        jLabel47.setBackground(new java.awt.Color(255, 255, 255));
        jLabel47.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel47.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel47.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel47.setOpaque(true);
        jLabel47.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel23.add(jLabel47);

        jPanel5.add(jPanel23);
        jPanel23.setBounds(380, 210, 60, 60);

        jPanel24.setBackground(new java.awt.Color(51, 51, 51));
        jPanel24.setLayout(new javax.swing.BoxLayout(jPanel24, javax.swing.BoxLayout.LINE_AXIS));

        jLabel48.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel48.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel48.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel48.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel24.add(jLabel48);

        jPanel5.add(jPanel24);
        jPanel24.setBounds(440, 210, 60, 60);

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setLayout(new javax.swing.BoxLayout(jPanel25, javax.swing.BoxLayout.LINE_AXIS));

        jLabel49.setBackground(new java.awt.Color(255, 255, 255));
        jLabel49.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel49.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel49.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel49.setOpaque(true);
        jLabel49.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel25.add(jLabel49);

        jLabel50.setBackground(new java.awt.Color(255, 255, 255));
        jLabel50.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel50.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel50.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel50.setOpaque(true);
        jLabel50.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel25.add(jLabel50);

        jPanel5.add(jPanel25);
        jPanel25.setBounds(500, 210, 120, 60);

        jPanel26.setBackground(new java.awt.Color(51, 51, 51));
        jPanel26.setLayout(new javax.swing.BoxLayout(jPanel26, javax.swing.BoxLayout.LINE_AXIS));

        jLabel51.setBackground(new java.awt.Color(51, 51, 51));
        jLabel51.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel51.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel51.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel51.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel26.add(jLabel51);

        jPanel5.add(jPanel26);
        jPanel26.setBounds(620, 210, 60, 60);

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setLayout(new javax.swing.BoxLayout(jPanel27, javax.swing.BoxLayout.LINE_AXIS));

        jLabel52.setBackground(new java.awt.Color(255, 255, 255));
        jLabel52.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel52.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel52.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel52.setOpaque(true);
        jLabel52.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel27.add(jLabel52);

        jPanel5.add(jPanel27);
        jPanel27.setBounds(680, 210, 60, 60);

        jPanel28.setBackground(new java.awt.Color(51, 51, 51));
        jPanel28.setLayout(new javax.swing.BoxLayout(jPanel28, javax.swing.BoxLayout.LINE_AXIS));

        jLabel53.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel53.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel53.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel53.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel28.add(jLabel53);

        jPanel5.add(jPanel28);
        jPanel28.setBounds(740, 210, 60, 60);

        jPanel29.setBackground(new java.awt.Color(51, 51, 51));
        jPanel29.setLayout(new javax.swing.BoxLayout(jPanel29, javax.swing.BoxLayout.LINE_AXIS));

        jLabel54.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel54.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel54.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel54.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel29.add(jLabel54);

        jPanel5.add(jPanel29);
        jPanel29.setBounds(20, 270, 60, 60);

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));
        jPanel30.setLayout(new javax.swing.BoxLayout(jPanel30, javax.swing.BoxLayout.LINE_AXIS));

        jLabel55.setBackground(new java.awt.Color(255, 255, 255));
        jLabel55.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel55.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel55.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel55.setOpaque(true);
        jLabel55.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel30.add(jLabel55);

        jPanel5.add(jPanel30);
        jPanel30.setBounds(80, 270, 60, 60);

        jPanel31.setBackground(new java.awt.Color(51, 51, 51));
        jPanel31.setLayout(new javax.swing.BoxLayout(jPanel31, javax.swing.BoxLayout.LINE_AXIS));

        jLabel56.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel56.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel56.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel56.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel31.add(jLabel56);

        jPanel5.add(jPanel31);
        jPanel31.setBounds(140, 270, 60, 60);

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));
        jPanel32.setLayout(new javax.swing.BoxLayout(jPanel32, javax.swing.BoxLayout.LINE_AXIS));

        jLabel57.setBackground(new java.awt.Color(255, 255, 255));
        jLabel57.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel57.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel57.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel57.setOpaque(true);
        jLabel57.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel32.add(jLabel57);

        jPanel5.add(jPanel32);
        jPanel32.setBounds(200, 270, 60, 60);

        jPanel33.setBackground(new java.awt.Color(51, 51, 51));
        jPanel33.setLayout(new javax.swing.BoxLayout(jPanel33, javax.swing.BoxLayout.LINE_AXIS));

        jLabel58.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel58.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel58.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel58.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel33.add(jLabel58);

        jLabel59.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel59.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel59.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel59.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel33.add(jLabel59);

        jPanel5.add(jPanel33);
        jPanel33.setBounds(260, 270, 120, 60);

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setLayout(new javax.swing.BoxLayout(jPanel34, javax.swing.BoxLayout.LINE_AXIS));

        jLabel60.setBackground(new java.awt.Color(255, 255, 255));
        jLabel60.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel60.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel60.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel60.setOpaque(true);
        jLabel60.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel34.add(jLabel60);

        jPanel5.add(jPanel34);
        jPanel34.setBounds(380, 270, 60, 60);

        jPanel35.setBackground(new java.awt.Color(51, 51, 51));
        jPanel35.setLayout(new javax.swing.BoxLayout(jPanel35, javax.swing.BoxLayout.LINE_AXIS));

        jLabel61.setBackground(new java.awt.Color(51, 51, 51));
        jLabel61.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel61.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel61.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel61.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel35.add(jLabel61);

        jPanel5.add(jPanel35);
        jPanel35.setBounds(440, 270, 60, 60);

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setLayout(new javax.swing.BoxLayout(jPanel36, javax.swing.BoxLayout.LINE_AXIS));

        jLabel62.setBackground(new java.awt.Color(255, 255, 255));
        jLabel62.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel62.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel62.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel62.setOpaque(true);
        jLabel62.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel36.add(jLabel62);

        jPanel5.add(jPanel36);
        jPanel36.setBounds(500, 270, 60, 60);

        jPanel37.setBackground(new java.awt.Color(51, 51, 51));
        jPanel37.setLayout(new javax.swing.BoxLayout(jPanel37, javax.swing.BoxLayout.LINE_AXIS));

        jLabel63.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel63.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel63.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel63.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel37.add(jLabel63);

        jLabel64.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel64.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel64.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel64.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel37.add(jLabel64);

        jPanel5.add(jPanel37);
        jPanel37.setBounds(560, 270, 120, 60);

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));
        jPanel38.setLayout(new javax.swing.BoxLayout(jPanel38, javax.swing.BoxLayout.LINE_AXIS));

        jLabel65.setBackground(new java.awt.Color(255, 255, 255));
        jLabel65.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel65.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel65.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel65.setOpaque(true);
        jLabel65.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel38.add(jLabel65);

        jPanel5.add(jPanel38);
        jPanel38.setBounds(680, 270, 60, 60);

        jPanel39.setBackground(new java.awt.Color(51, 51, 51));
        jPanel39.setLayout(new javax.swing.BoxLayout(jPanel39, javax.swing.BoxLayout.LINE_AXIS));

        jLabel66.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel66.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel66.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel66.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel39.add(jLabel66);

        jPanel5.add(jPanel39);
        jPanel39.setBounds(740, 270, 60, 60);

        jPanel40.setBackground(new java.awt.Color(255, 0, 204));
        jPanel40.setLayout(new javax.swing.BoxLayout(jPanel40, javax.swing.BoxLayout.LINE_AXIS));

        jLabel67.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(0, 0, 0));
        jLabel67.setText("  C");
        jLabel67.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel67.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel67.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel67.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel40.add(jLabel67);

        jPanel5.add(jPanel40);
        jPanel40.setBounds(20, 330, 60, 60);

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setLayout(new javax.swing.BoxLayout(jPanel41, javax.swing.BoxLayout.LINE_AXIS));

        jLabel68.setBackground(new java.awt.Color(255, 255, 255));
        jLabel68.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel68.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel68.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel68.setOpaque(true);
        jLabel68.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel41.add(jLabel68);

        jPanel5.add(jPanel41);
        jPanel41.setBounds(80, 330, 60, 60);

        jPanel42.setBackground(new java.awt.Color(51, 51, 51));
        jPanel42.setLayout(new javax.swing.BoxLayout(jPanel42, javax.swing.BoxLayout.LINE_AXIS));

        jLabel69.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel69.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel69.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel69.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel42.add(jLabel69);

        jPanel5.add(jPanel42);
        jPanel42.setBounds(140, 330, 60, 60);

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));
        jPanel43.setLayout(new javax.swing.BoxLayout(jPanel43, javax.swing.BoxLayout.LINE_AXIS));

        jLabel70.setBackground(new java.awt.Color(255, 255, 255));
        jLabel70.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel70.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel70.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel70.setOpaque(true);
        jLabel70.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel43.add(jLabel70);

        jLabel71.setBackground(new java.awt.Color(255, 255, 255));
        jLabel71.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel71.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel71.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel71.setOpaque(true);
        jLabel71.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel43.add(jLabel71);

        jLabel72.setBackground(new java.awt.Color(255, 255, 255));
        jLabel72.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel72.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel72.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel72.setOpaque(true);
        jLabel72.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel43.add(jLabel72);

        jPanel5.add(jPanel43);
        jPanel43.setBounds(200, 330, 180, 60);

        jPanel44.setBackground(new java.awt.Color(0, 0, 255));
        jPanel44.setLayout(new javax.swing.BoxLayout(jPanel44, javax.swing.BoxLayout.LINE_AXIS));

        jLabel73.setBackground(new java.awt.Color(0, 0, 255));
        jLabel73.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel73.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel73.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel73.setOpaque(true);
        jLabel73.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel44.add(jLabel73);

        jPanel5.add(jPanel44);
        jPanel44.setBounds(380, 330, 60, 60);

        jPanel45.setBackground(new java.awt.Color(51, 51, 51));
        jPanel45.setLayout(new javax.swing.BoxLayout(jPanel45, javax.swing.BoxLayout.LINE_AXIS));

        jLabel74.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel74.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel74.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel74.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel45.add(jLabel74);

        jPanel5.add(jPanel45);
        jPanel45.setBounds(440, 330, 60, 60);

        jPanel46.setBackground(new java.awt.Color(255, 255, 255));
        jPanel46.setLayout(new javax.swing.BoxLayout(jPanel46, javax.swing.BoxLayout.LINE_AXIS));

        jLabel75.setBackground(new java.awt.Color(255, 255, 255));
        jLabel75.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel75.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel75.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel75.setOpaque(true);
        jLabel75.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel46.add(jLabel75);

        jPanel5.add(jPanel46);
        jPanel46.setBounds(500, 330, 60, 60);

        jPanel47.setBackground(new java.awt.Color(51, 51, 51));
        jPanel47.setLayout(new javax.swing.BoxLayout(jPanel47, javax.swing.BoxLayout.LINE_AXIS));

        jLabel76.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel76.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel76.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel76.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel47.add(jLabel76);

        jPanel5.add(jPanel47);
        jPanel47.setBounds(560, 330, 60, 60);

        jPanel48.setBackground(new java.awt.Color(255, 255, 255));
        jPanel48.setLayout(new javax.swing.BoxLayout(jPanel48, javax.swing.BoxLayout.LINE_AXIS));

        jLabel77.setBackground(new java.awt.Color(255, 255, 255));
        jLabel77.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel77.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel77.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel77.setOpaque(true);
        jLabel77.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel48.add(jLabel77);

        jLabel78.setBackground(new java.awt.Color(255, 255, 255));
        jLabel78.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel78.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel78.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel78.setOpaque(true);
        jLabel78.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel48.add(jLabel78);

        jPanel5.add(jPanel48);
        jPanel48.setBounds(620, 330, 120, 60);

        jPanel49.setBackground(new java.awt.Color(51, 51, 51));
        jPanel49.setLayout(new javax.swing.BoxLayout(jPanel49, javax.swing.BoxLayout.LINE_AXIS));

        jLabel79.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel79.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel79.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel79.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel49.add(jLabel79);

        jPanel5.add(jPanel49);
        jPanel49.setBounds(740, 330, 60, 60);

        jPanel50.setBackground(new java.awt.Color(51, 51, 51));
        jPanel50.setLayout(new javax.swing.BoxLayout(jPanel50, javax.swing.BoxLayout.LINE_AXIS));

        jLabel80.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel80.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel80.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel80.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel50.add(jLabel80);

        jPanel5.add(jPanel50);
        jPanel50.setBounds(20, 390, 60, 60);

        jPanel51.setBackground(new java.awt.Color(255, 255, 255));
        jPanel51.setLayout(new javax.swing.BoxLayout(jPanel51, javax.swing.BoxLayout.LINE_AXIS));

        jLabel81.setBackground(new java.awt.Color(255, 255, 255));
        jLabel81.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel81.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel81.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel81.setOpaque(true);
        jLabel81.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel51.add(jLabel81);

        jPanel5.add(jPanel51);
        jPanel51.setBounds(80, 390, 60, 60);

        jPanel52.setBackground(new java.awt.Color(51, 51, 51));
        jPanel52.setLayout(new javax.swing.BoxLayout(jPanel52, javax.swing.BoxLayout.LINE_AXIS));

        jLabel82.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel82.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel82.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel82.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel52.add(jLabel82);

        jLabel83.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel83.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel83.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel83.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel52.add(jLabel83);

        jPanel5.add(jPanel52);
        jPanel52.setBounds(140, 390, 120, 60);

        jPanel53.setBackground(new java.awt.Color(255, 255, 255));
        jPanel53.setLayout(new javax.swing.BoxLayout(jPanel53, javax.swing.BoxLayout.LINE_AXIS));

        jLabel84.setBackground(new java.awt.Color(255, 255, 255));
        jLabel84.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel84.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel84.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel84.setOpaque(true);
        jLabel84.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel53.add(jLabel84);

        jLabel85.setBackground(new java.awt.Color(255, 255, 255));
        jLabel85.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel85.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel85.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel85.setOpaque(true);
        jLabel85.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel53.add(jLabel85);

        jLabel86.setBackground(new java.awt.Color(255, 255, 255));
        jLabel86.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel86.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel86.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel86.setOpaque(true);
        jLabel86.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel53.add(jLabel86);

        jPanel5.add(jPanel53);
        jPanel53.setBounds(260, 390, 180, 60);

        jPanel54.setBackground(new java.awt.Color(51, 51, 51));
        jPanel54.setLayout(new javax.swing.BoxLayout(jPanel54, javax.swing.BoxLayout.LINE_AXIS));

        jLabel87.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel87.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel87.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel87.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel54.add(jLabel87);

        jPanel5.add(jPanel54);
        jPanel54.setBounds(440, 390, 60, 60);

        jPanel55.setBackground(new java.awt.Color(255, 255, 255));
        jPanel55.setLayout(new javax.swing.BoxLayout(jPanel55, javax.swing.BoxLayout.LINE_AXIS));

        jLabel88.setBackground(new java.awt.Color(255, 255, 255));
        jLabel88.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel88.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel88.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel88.setOpaque(true);
        jLabel88.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel55.add(jLabel88);

        jLabel89.setBackground(new java.awt.Color(255, 255, 255));
        jLabel89.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel89.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel89.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel89.setOpaque(true);
        jLabel89.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel55.add(jLabel89);

        jLabel90.setBackground(new java.awt.Color(255, 255, 255));
        jLabel90.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel90.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel90.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel90.setOpaque(true);
        jLabel90.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel55.add(jLabel90);

        jLabel91.setBackground(new java.awt.Color(255, 255, 255));
        jLabel91.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel91.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel91.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel91.setOpaque(true);
        jLabel91.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel55.add(jLabel91);

        jPanel5.add(jPanel55);
        jPanel55.setBounds(500, 390, 240, 60);

        jPanel56.setBackground(new java.awt.Color(51, 51, 51));
        jPanel56.setLayout(new javax.swing.BoxLayout(jPanel56, javax.swing.BoxLayout.LINE_AXIS));

        jLabel92.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel92.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel92.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel92.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel56.add(jLabel92);

        jPanel5.add(jPanel56);
        jPanel56.setBounds(740, 390, 60, 60);

        jPanel57.setBackground(new java.awt.Color(51, 51, 51));
        jPanel57.setLayout(new javax.swing.BoxLayout(jPanel57, javax.swing.BoxLayout.LINE_AXIS));

        jLabel93.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel93.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel93.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel93.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel57.add(jLabel93);

        jPanel5.add(jPanel57);
        jPanel57.setBounds(20, 450, 60, 60);

        jPanel58.setBackground(new java.awt.Color(255, 255, 255));
        jPanel58.setLayout(new javax.swing.BoxLayout(jPanel58, javax.swing.BoxLayout.LINE_AXIS));

        jLabel94.setBackground(new java.awt.Color(255, 255, 255));
        jLabel94.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel94.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel94.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel94.setOpaque(true);
        jLabel94.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel58.add(jLabel94);

        jPanel5.add(jPanel58);
        jPanel58.setBounds(80, 450, 60, 60);

        jPanel59.setBackground(new java.awt.Color(51, 51, 51));
        jPanel59.setLayout(new javax.swing.BoxLayout(jPanel59, javax.swing.BoxLayout.LINE_AXIS));

        jLabel95.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel95.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel95.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel95.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel59.add(jLabel95);

        jPanel5.add(jPanel59);
        jPanel59.setBounds(140, 450, 60, 60);

        jPanel60.setBackground(new java.awt.Color(255, 255, 255));
        jPanel60.setLayout(new javax.swing.BoxLayout(jPanel60, javax.swing.BoxLayout.LINE_AXIS));

        jLabel96.setBackground(new java.awt.Color(255, 255, 255));
        jLabel96.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel96.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel96.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel96.setOpaque(true);
        jLabel96.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel96);

        jLabel97.setBackground(new java.awt.Color(255, 255, 255));
        jLabel97.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel97.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel97.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel97.setOpaque(true);
        jLabel97.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel97);

        jLabel98.setBackground(new java.awt.Color(255, 255, 255));
        jLabel98.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel98.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel98.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel98.setOpaque(true);
        jLabel98.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel98);

        jLabel99.setBackground(new java.awt.Color(255, 255, 255));
        jLabel99.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel99.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel99.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel99.setOpaque(true);
        jLabel99.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel99);

        jLabel100.setBackground(new java.awt.Color(255, 255, 255));
        jLabel100.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel100.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel100.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel100.setOpaque(true);
        jLabel100.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel100);

        jLabel101.setBackground(new java.awt.Color(255, 255, 255));
        jLabel101.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel101.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel101.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel101.setOpaque(true);
        jLabel101.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel101);

        jLabel102.setBackground(new java.awt.Color(255, 255, 255));
        jLabel102.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel102.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel102.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel102.setOpaque(true);
        jLabel102.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel102);

        jLabel103.setBackground(new java.awt.Color(255, 255, 255));
        jLabel103.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel103.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel103.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel103.setOpaque(true);
        jLabel103.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel103);

        jLabel104.setBackground(new java.awt.Color(255, 255, 255));
        jLabel104.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel104.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel104.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel104.setOpaque(true);
        jLabel104.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel104);

        jLabel105.setBackground(new java.awt.Color(255, 255, 255));
        jLabel105.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel105.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel105.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel105.setOpaque(true);
        jLabel105.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel60.add(jLabel105);

        jPanel5.add(jPanel60);
        jPanel60.setBounds(200, 450, 600, 60);

        jPanel61.setBackground(new java.awt.Color(51, 51, 51));
        jPanel61.setLayout(new javax.swing.BoxLayout(jPanel61, javax.swing.BoxLayout.LINE_AXIS));

        jLabel106.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel106.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel106.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel106.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel61.add(jLabel106);

        jPanel5.add(jPanel61);
        jPanel61.setBounds(20, 510, 60, 60);

        jPanel62.setBackground(new java.awt.Color(255, 255, 255));
        jPanel62.setMaximumSize(new java.awt.Dimension(60, 60));
        jPanel62.setMinimumSize(new java.awt.Dimension(60, 60));
        jPanel62.setLayout(new javax.swing.BoxLayout(jPanel62, javax.swing.BoxLayout.LINE_AXIS));

        jLabel107.setBackground(new java.awt.Color(255, 255, 255));
        jLabel107.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel107.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel107.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel107.setOpaque(true);
        jLabel107.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel62.add(jLabel107);

        jPanel5.add(jPanel62);
        jPanel62.setBounds(80, 510, 60, 60);

        jPanel63.setBackground(new java.awt.Color(51, 51, 51));
        jPanel63.setLayout(new javax.swing.BoxLayout(jPanel63, javax.swing.BoxLayout.LINE_AXIS));

        jLabel108.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel108.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel108.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel108.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel63.add(jLabel108);

        jPanel5.add(jPanel63);
        jPanel63.setBounds(140, 510, 60, 60);

        jPanel64.setBackground(new java.awt.Color(255, 255, 255));
        jPanel64.setLayout(new javax.swing.BoxLayout(jPanel64, javax.swing.BoxLayout.LINE_AXIS));

        jLabel109.setBackground(new java.awt.Color(255, 255, 255));
        jLabel109.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel109.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel109.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel109.setOpaque(true);
        jLabel109.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel64.add(jLabel109);

        jPanel5.add(jPanel64);
        jPanel64.setBounds(200, 510, 60, 60);

        jPanel65.setBackground(new java.awt.Color(51, 51, 51));
        jPanel65.setLayout(new javax.swing.BoxLayout(jPanel65, javax.swing.BoxLayout.LINE_AXIS));

        jLabel110.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel110.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel110.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel110.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel65.add(jLabel110);

        jLabel111.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel111.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel111.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel111.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel65.add(jLabel111);

        jLabel112.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel112.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel112.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel112.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel65.add(jLabel112);

        jLabel113.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel113.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel113.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel113.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel65.add(jLabel113);

        jLabel114.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel114.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel114.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel114.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel65.add(jLabel114);

        jPanel5.add(jPanel65);
        jPanel65.setBounds(260, 510, 300, 60);

        jPanel66.setBackground(new java.awt.Color(255, 255, 255));
        jPanel66.setLayout(new javax.swing.BoxLayout(jPanel66, javax.swing.BoxLayout.LINE_AXIS));

        jLabel115.setBackground(new java.awt.Color(255, 255, 255));
        jLabel115.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel115.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel115.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel115.setOpaque(true);
        jLabel115.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel66.add(jLabel115);

        jLabel116.setBackground(new java.awt.Color(255, 255, 255));
        jLabel116.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel116.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel116.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel116.setOpaque(true);
        jLabel116.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel66.add(jLabel116);

        jLabel117.setBackground(new java.awt.Color(255, 255, 255));
        jLabel117.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel117.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel117.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel117.setOpaque(true);
        jLabel117.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel66.add(jLabel117);

        jPanel5.add(jPanel66);
        jPanel66.setBounds(560, 510, 180, 60);

        jPanel67.setBackground(new java.awt.Color(51, 51, 51));
        jPanel67.setLayout(new javax.swing.BoxLayout(jPanel67, javax.swing.BoxLayout.LINE_AXIS));

        jLabel118.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel118.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel118.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel118.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel67.add(jLabel118);

        jPanel5.add(jPanel67);
        jPanel67.setBounds(740, 510, 60, 60);

        jPanel68.setBackground(new java.awt.Color(51, 51, 51));
        jPanel68.setLayout(new javax.swing.BoxLayout(jPanel68, javax.swing.BoxLayout.LINE_AXIS));

        jLabel119.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel119.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel119.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel119.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel68.add(jLabel119);

        jPanel5.add(jPanel68);
        jPanel68.setBounds(20, 570, 60, 60);

        jPanel69.setBackground(new java.awt.Color(255, 255, 255));
        jPanel69.setLayout(new javax.swing.BoxLayout(jPanel69, javax.swing.BoxLayout.LINE_AXIS));

        jLabel120.setBackground(new java.awt.Color(255, 255, 255));
        jLabel120.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel120.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel120.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel120.setOpaque(true);
        jLabel120.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel120);

        jLabel121.setBackground(new java.awt.Color(255, 255, 255));
        jLabel121.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel121.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel121.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel121.setOpaque(true);
        jLabel121.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel121);

        jLabel122.setBackground(new java.awt.Color(255, 255, 255));
        jLabel122.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel122.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel122.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel122.setOpaque(true);
        jLabel122.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel122);

        jLabel123.setBackground(new java.awt.Color(255, 255, 255));
        jLabel123.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel123.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel123.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel123.setOpaque(true);
        jLabel123.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel123);

        jLabel124.setBackground(new java.awt.Color(255, 255, 255));
        jLabel124.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel124.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel124.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel124.setOpaque(true);
        jLabel124.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel124);

        jLabel125.setBackground(new java.awt.Color(255, 255, 255));
        jLabel125.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel125.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel125.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel125.setOpaque(true);
        jLabel125.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel125);

        jLabel126.setBackground(new java.awt.Color(255, 255, 255));
        jLabel126.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel126.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel126.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel126.setOpaque(true);
        jLabel126.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel126);

        jLabel127.setBackground(new java.awt.Color(255, 255, 255));
        jLabel127.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel127.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel127.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel127.setOpaque(true);
        jLabel127.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel127);

        jLabel128.setBackground(new java.awt.Color(255, 255, 255));
        jLabel128.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel128.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel128.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel128.setOpaque(true);
        jLabel128.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel128);

        jLabel129.setBackground(new java.awt.Color(255, 255, 255));
        jLabel129.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel129.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel129.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel129.setOpaque(true);
        jLabel129.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel129);

        jLabel130.setBackground(new java.awt.Color(255, 255, 255));
        jLabel130.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel130.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel130.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel130.setOpaque(true);
        jLabel130.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel69.add(jLabel130);

        jPanel5.add(jPanel69);
        jPanel69.setBounds(80, 570, 660, 60);

        jPanel70.setBackground(new java.awt.Color(51, 51, 51));
        jPanel70.setLayout(new javax.swing.BoxLayout(jPanel70, javax.swing.BoxLayout.LINE_AXIS));

        jLabel131.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel131.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel131.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel131.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel70.add(jLabel131);

        jPanel5.add(jPanel70);
        jPanel70.setBounds(740, 570, 60, 60);

        jPanel71.setBackground(new java.awt.Color(51, 51, 51));
        jPanel71.setLayout(new javax.swing.BoxLayout(jPanel71, javax.swing.BoxLayout.LINE_AXIS));

        jLabel132.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel132.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel132.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel132.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel71.add(jLabel132);

        jLabel133.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel133.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel133.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel133.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel71.add(jLabel133);

        jLabel134.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel134.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel134.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel134.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel71.add(jLabel134);

        jPanel5.add(jPanel71);
        jPanel71.setBounds(20, 630, 180, 60);

        jPanel73.setBackground(new java.awt.Color(51, 51, 51));
        jPanel73.setLayout(new javax.swing.BoxLayout(jPanel73, javax.swing.BoxLayout.LINE_AXIS));

        jLabel136.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel136.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel136.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel136.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel136);

        jLabel137.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel137.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel137.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel137.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel137);

        jLabel138.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel138.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel138.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel138.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel138);

        jLabel139.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel139.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel139.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel139.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel139);

        jLabel140.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel140.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel140.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel140.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel140);

        jLabel141.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel141.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel141.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel141.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel141);

        jLabel142.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel142.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel142.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel142.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel142);

        jLabel143.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel143.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel143.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel143.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel143);

        jLabel144.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel144.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel144.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel144.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel73.add(jLabel144);

        jPanel5.add(jPanel73);
        jPanel73.setBounds(260, 630, 540, 60);

        jPanel2.setBackground(new java.awt.Color(255, 0, 204));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel135.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jLabel135.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel135.setMinimumSize(new java.awt.Dimension(60, 60));
        jLabel135.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel2.add(jLabel135);

        jPanel5.add(jPanel2);
        jPanel2.setBounds(200, 630, 60, 60);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("PUAN");
        jPanel5.add(jLabel2);
        jLabel2.setBounds(890, 26, 130, 80);

        skor_tabela.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jPanel5.add(skor_tabela);
        skor_tabela.setBounds(890, 110, 120, 70);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 0, 1070, 690);

        jPanel74.setLayout(null);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1 .png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel74.add(jLabel4);
        jLabel4.setBounds(200, 130, 170, 200);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/2 .png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel74.add(jLabel1);
        jLabel1.setBounds(450, 116, 150, 200);

        getContentPane().add(jPanel74);
        jPanel74.setBounds(0, 0, 850, 810);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_RIGHT){
            if(oyuncu.getAd().equals("tembel")){
                if(f!=12){
                f++;
            }
            if(maps[d][f]=='0'){
                f--;
                return;
            }
            if(y<13){
                if(y!=12){
                    label1[x][y].setIcon(null);
                    y++;
                    label1[x][y].setIcon(new ImageIcon(img));
                    System.out.println(oyuncu.getAd());
                    /*
                    int w=enemys_name.size()-1;
                     for(int i=0;i<path.get(w).size();i++){
                         path.get(w).get(i).getLabel().setBackground(Color.WHITE);
                     }
                     */
                    dijikstra("right");
                             
                        
                        
                    if(label1[x][y]==white[a] && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        
                    }else if(label1[x][y]==white[g] && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        
                    }
                    else if(label1[x][y]==white[b] && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        
                    }else if(label1[x][y]==white[c] && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        
                    }else if(label1[x][y]==white[z] && white[z].getText()=="1"){
                       puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                       skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                        
                    }else if(label1[x][y]==white[w] && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }
        else{
                q=f;
                if(f!=11){
                f+=2;
                q++;
                 if(maps[d][f]=='0' || maps[d][q]=='0'){
                   f-=2;
                   return;
                }    
            }else{
                    f++;
                    if(maps[d][f]=='0'){
                      f-=1;
                   return;
                }   
                }
            
            
            if(y<13){
                if(y!=12){
                    label1[x][y].setIcon(null);
                    y+=2;
                    p=y-1;
                    label1[x][y].setIcon(new ImageIcon(img));
                    /*
                    int w=enemys_name.size()-1;
                     for(int i=0;i<path.get(w).size();i++){
                         path.get(w).get(i).getLabel().setBackground(Color.WHITE);
                     }*/
                    dijikstra("right");
                    
                    
                    if((label1[x][y]==white[a] || label1[x][p]==white[a]) && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        white[a].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[g] || label1[x][p]==white[g]) && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        white[g].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                    if((label1[x][y]==white[b] || label1[x][p]==white[b]) && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        white[b].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[c] || label1[x][p]==white[c]) && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        white[c].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[z] || label1[x][p]==white[z]) && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                        white[z].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[w] || label1[x][p]==white[w]) && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        white[w].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }
            
          }else if(evt.getKeyCode()==KeyEvent.VK_LEFT){
            if(oyuncu.getAd().equals("tembel")){
                if(f!=0){
                f--;
            }
            if(maps[d][f]=='0'){
                f++;
                return;
            }
            if(y<14){
                if(y!=0){
                    label1[x][y].setIcon(null);
                    y--;
                   
                    label1[x][y].setIcon(new ImageIcon(img));
                    System.out.println("------------------");
                    System.out.println(img);
                    System.out.println("----------------------");
                    
                    /*
                    int w=enemys_name.size()-1;
                     for(int i=0;i<path.get(w).size();i++){
                         path.get(w).get(i).getLabel().setBackground(Color.WHITE);
                     }
                     */
                    dijikstra("left");
                    
                    if(label1[x][y]==white[a] && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        
                    }else if(label1[x][y]==white[g] && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        
                    }
                    else if(label1[x][y]==white[b] && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        
                    }else if(label1[x][y]==white[c] && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        
                    }else if(label1[x][y]==white[z] && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                    }else if(label1[x][y]==white[w] && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        
                    }
                }  
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }else{
                q=f;
                if(f!=1){
                f-=2;
                q--;
                 if(maps[d][f]=='0' || maps[d][q]=='0'){
                    f+=2;
                   return;
                 }    
            }else{
                    f--;
                    if(maps[d][f]=='0'){
                        f++;
                        return;
                    }
                }
            
            
            
            if(y<14){
                if(y!=0){
                    label1[x][y].setIcon(null);
                    y-=2;
                    p=y+1;
                    label1[x][y].setIcon(new ImageIcon(img));
                    System.out.println("----------------");
                    System.out.println(img);
                    System.out.println("---------------------");
                    /*
                    int w=enemys_name.size()-1;
                     for(int i=0;i<path.get(w).size();i++){
                         path.get(w).get(i).getLabel().setBackground(Color.WHITE);
                     }*/
                    dijikstra("left");
                    
                    if((label1[x][y]==white[a] || label1[x][p]==white[a]) && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        white[a].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[g] || label1[x][p]==white[g]) && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        white[g].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                    if((label1[x][y]==white[b] || label1[x][p]==white[b]) && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        white[b].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[c] || label1[x][p]==white[c]) && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        white[c].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[z] || label1[x][p]==white[z]) && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                        white[z].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[w] || label1[x][p]==white[w]) && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        white[w].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                }  
            }
              if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_UP){
            if(oyuncu.getAd().equals("tembel")){
                if(d!=0){
                d--;
            }
            if(maps[d][f]=='0'){
                d++;
                return;
            }
            if(x<12){
                if(x!=0){
                    label1[x][y].setIcon(null);
                    x--;
                    label1[x][y].setIcon(new ImageIcon(img));
                    
                    dijikstra("up");
                    if(label1[x][y]==white[a] && white[a].getText()=="1"){
                       puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                       skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                    }else if(label1[x][y]==white[g] && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                    }
                    else if(label1[x][y]==white[b] && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                    }else if(label1[x][y]==white[c] && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                    }else if(label1[x][y]==white[z] && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                    }else if(label1[x][y]==white[w] && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }else{
                m=d;
                if(d!=1){
                d-=2;
                m-=1;
               if(maps[d][f]=='0' || maps[m][f]=='0'){
                d+=2;
                return;
                  }    
            }else{
                  d--;
                  if(maps[d][f]=='0'){
                      d++;
                      return;
                  }
                }
            
            
            
            if(x<12){
                if(x!=1){
                    label1[x][y].setIcon(null);
                    x-=2;
                    p=x+1;
                    label1[x][y].setIcon(new ImageIcon(img));
                    
                    dijikstra("up");
                    if((label1[x][y]==white[a] || label1[p][y]==white[a]) && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        white[a].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[g] || label1[p][y]==white[g]) && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        white[g].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                    if((label1[x][y]==white[b] || label1[p][y]==white[b]) && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        white[b].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[c] || label1[p][y]==white[c]) && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        white[c].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[z] || label1[p][y]==white[z]) && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                        white[z].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[w] || label1[p][y]==white[w]) && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        white[w].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }
        }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(oyuncu.getAd().equals("tembel")){
                if(d!=10){
                d++;
            }
            if(maps[d][f]=='0'){
                d--;
                return;
            }
            if(x<11){
                if(x!=10){
                    label1[x][y].setIcon(null);
                    x++;
                    label1[x][y].setIcon(new ImageIcon(img));
                    
                    dijikstra("down");
                          
                    if(label1[x][y]==white[a] && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                    }else if(label1[x][y]==white[g] && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                    }
                    else if(label1[x][y]==white[b] && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                    }else if(label1[x][y]==white[c] && white[c].getText()=="1"){
                       puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                       skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                    }else if(label1[x][y]==white[z] && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                    }else if(label1[x][y]==white[w] && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                return;
            }
            }else{
                m=d;
                if(d!=9){
                d+=2;
                m++;
                if(maps[d][f]=='0' || maps[m][f]=='0'){
                d-=2;
                return;
            }
            }else{
                    d++;
                    if(maps[d][f]=='0'){
                    d-=1;
                    return;
                   }
             }
            if(x<11){
                if(x!=9){
                    label1[x][y].setIcon(null);
                    x+=2;
                    p=x-1;
                    label1[x][y].setIcon(new ImageIcon(img));
                    
                    dijikstra("down");
                    if((label1[x][y]==white[a] || label1[p][y]==white[a]) && white[a].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[a].setText("0");
                        white[a].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[g] || label1[p][y]==white[g]) && white[g].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[g].setText("0");
                        white[g].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                    if((label1[x][y]==white[b] || label1[p][y]==white[b]) && white[b].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[b].setText("0");
                        white[b].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[c] || label1[p][y]==white[c]) && white[c].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[c].setText("0");
                        white[c].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[z] || label1[p][y]==white[z]) && white[z].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[z].setText("0");
                        white[z].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }if((label1[x][y]==white[w] || label1[p][y]==white[w]) && white[w].getText()=="1"){
                        puanlar.setSkor(puanlar.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        System.out.println("puan:"+puanlar.getSkor());
                        white[w].setText("0");
                        white[w].setIcon(null);
                        label1[x][y].setIcon(new ImageIcon(img));
                    }
                }
            }
            if(puanlar.getSkor()<=0){
                JOptionPane.showMessageDialog(this,"KAYBETTÄ°NÄ°Z");
                return;
            }
            if(puanlar.getSkor()>0 && label1[x][y]==jLabel105){
                JOptionPane.showMessageDialog(this,"TEBRÄ°KLER KAZANDINIZ");
                
                return;
            }
            }
        }
    }//GEN-LAST:event_formKeyPressed
  
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

        oyuncu=new gozluklu(1,"gozluklu","oyuncu",20);
        skor_tabela.setText(String.valueOf(oyuncu.getSkor()));
        puanlar=new puan(oyuncu.getId(),oyuncu.getAd(),oyuncu.getTur(),oyuncu.getSkor());
        altÄ±n=new altÄ±n(5,5);
        mantar=new mantar(50,1);
        goldenimg=new ImageIcon(this.getClass().getResource(altÄ±n.getDosya_yolu())).getImage();
        mantarimg=new ImageIcon(this.getClass().getResource(mantar.getDosya_yolu())).getImage();
        System.out.println(oyuncu.getDosya_yolu());
        img=new ImageIcon(this.getClass().getResource(oyuncu.getDosya_yolu())).getImage();
        System.out.println(img);
        jPanel74.setVisible(false);
        jPanel5.setVisible(true);
        process();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        oyuncu=new tembel(2,"tembel","oyuncu",20);
        skor_tabela.setText(String.valueOf(oyuncu.getSkor()));
        puanlar=new puan(oyuncu.getId(),oyuncu.getAd(),oyuncu.getTur(),oyuncu.getSkor());
        altÄ±n=new altÄ±n(5,5);
        mantar=new mantar(50,1);
        goldenimg=new ImageIcon(this.getClass().getResource(altÄ±n.getDosya_yolu())).getImage();
        mantarimg=new ImageIcon(this.getClass().getResource(mantar.getDosya_yolu())).getImage();
        System.out.println(oyuncu.getDosya_yolu());
        img=new ImageIcon(this.getClass().getResource(oyuncu.getDosya_yolu())).getImage();
        jPanel74.setVisible(false);
        jPanel5.setVisible(true);
        process();
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    
    public void start(){
        jPanel74.setVisible(true);
        jPanel5.setVisible(false);
    }
    public void label_tanÄ±mlama(){
        dugum.add(vertex1=new Vertex(jlabel15));
        dugum.add(vertex2=new Vertex(jlabel16));
        dugum.add(vertex3=new Vertex(jLabel17));
        dugum.add(vertex4=new Vertex(jLabel18));
        dugum.add(vertex5=new Vertex(jLabel20));
        dugum.add(vertex6=new Vertex(jLabel21));
        dugum.add(vertex7=new Vertex(jLabel22));
        dugum.add(vertex8=new Vertex(jlabel23));
        dugum.add(vertex9=new Vertex(jlabel24));
        dugum.add(vertex10=new Vertex(jlabel25));
        dugum.add(vertex11=new Vertex(jlabel28));
        dugum.add(vertex12=new Vertex(jlabel30));
        dugum.add(vertex13=new Vertex(jLabel31));
        dugum.add(vertex14=new Vertex(jLabel32));
        dugum.add(vertex15=new Vertex(jLabel33));
        dugum.add(vertex16=new Vertex(jLabel34));
        dugum.add(vertex17=new Vertex(jLabel35));
        dugum.add(vertex18=new Vertex(jLabel38));
        dugum.add(vertex19=new Vertex(jLabel41));
        dugum.add(vertex20=new Vertex(jLabel42));
        dugum.add(vertex21=new Vertex(jLabel43));
        dugum.add(vertex22=new Vertex(jLabel44));
        dugum.add(vertex23=new Vertex(jLabel47));
        dugum.add(vertex24=new Vertex(jLabel49));
        dugum.add(vertex25=new Vertex(jLabel50));
        dugum.add(vertex26=new Vertex(jLabel52));
        dugum.add(vertex27=new Vertex(jLabel55));
        dugum.add(vertex28=new Vertex(jLabel57));
        dugum.add(vertex29=new Vertex(jLabel60));
        dugum.add(vertex30=new Vertex(jLabel62));
        dugum.add(vertex31=new Vertex(jLabel65));
        dugum.add(vertex32=new Vertex(jLabel68));
        dugum.add(vertex33=new Vertex(jLabel70));
        dugum.add(vertex34=new Vertex(jLabel71));
        dugum.add(vertex35=new Vertex(jLabel72));
        dugum.add(vertex36=new Vertex(jLabel73));
        dugum.add(vertex37=new Vertex(jLabel75));
        dugum.add(vertex38=new Vertex(jLabel77));
        dugum.add(vertex39=new Vertex(jLabel78));
        dugum.add(vertex40=new Vertex(jLabel81));
        dugum.add(vertex41=new Vertex(jLabel84));
        dugum.add(vertex42=new Vertex(jLabel85));
        dugum.add(vertex43=new Vertex(jLabel86));
        dugum.add(vertex44=new Vertex(jLabel88));
        dugum.add(vertex45=new Vertex(jLabel89));
        dugum.add(vertex46=new Vertex(jLabel90));
        dugum.add(vertex47=new Vertex(jLabel91));
        dugum.add(vertex48=new Vertex(jLabel94));
        dugum.add(vertex49=new Vertex(jLabel96));
        dugum.add(vertex50=new Vertex(jLabel97));
        dugum.add(vertex51=new Vertex(jLabel98));
        dugum.add(vertex52=new Vertex(jLabel99));
        dugum.add(vertex53=new Vertex(jLabel100));
        dugum.add(vertex54=new Vertex(jLabel101));
        dugum.add(vertex55=new Vertex(jLabel102));
        dugum.add(vertex56=new Vertex(jLabel103));
        dugum.add(vertex57=new Vertex(jLabel104));
        dugum.add(vertex58=new Vertex(jLabel105));
        dugum.add(vertex59=new Vertex(jLabel107));
        dugum.add(vertex60=new Vertex(jLabel109));
        dugum.add(vertex61=new Vertex(jLabel115));
        dugum.add(vertex62=new Vertex(jLabel116));
        dugum.add(vertex63=new Vertex(jLabel117));
        dugum.add(vertex64=new Vertex(jLabel120));
        dugum.add(vertex65=new Vertex(jLabel121));
        dugum.add(vertex66=new Vertex(jLabel122));
        dugum.add(vertex67=new Vertex(jLabel123));
        dugum.add(vertex68=new Vertex(jLabel124));
        dugum.add(vertex69=new Vertex(jLabel125));
        dugum.add(vertex70=new Vertex(jLabel126));
        dugum.add(vertex71=new Vertex(jLabel127));
        dugum.add(vertex72=new Vertex(jLabel128));
        dugum.add(vertex73=new Vertex(jLabel129));
        dugum.add(vertex74=new Vertex(jLabel130));
        dugum.add(vertex75=new Vertex(jlabel4));
         dugum.add(vertex76=new Vertex(jlabel11));
         dugum.add(vertex77=new Vertex(jLabel67));
         dugum.add(vertex78=new Vertex(jLabel135));
        label1[0][0]=jlabel1;
        label1[0][1]=jlabel2;
        label1[0][2]=jlabel3;
        label1[0][3]=jlabel4;
        label1[0][4]=jlabel5;
        label1[0][5]=jlabel6;
        label1[0][6]=jlabel7;
        label1[0][7]=jlabel8;
        label1[0][8]=jlabel9;
        label1[0][9]=jlabel10;
        label1[0][10]=jlabel11;
        label1[0][11]=jlabel12;
        label1[0][12]=jlabel13;
        
        label1[1][0]=jlabel14;
        label1[1][1]=jlabel15;
        label1[1][2]=jlabel16;
        label1[1][3]=jLabel17;
        label1[1][4]=jLabel18;
        label1[1][5]=jLabel19;
        label1[1][6]=jLabel20;
        label1[1][7]=jLabel21;
        label1[1][8]=jLabel22;
        label1[1][9]=jlabel23;
        label1[1][10]=jlabel24;
        label1[1][11]=jlabel25;
        label1[1][12]=jlabel26;
        
        label1[2][0]=jLabel27;
        label1[2][1]=jlabel28;
        label1[2][2]=jlabel29;
        label1[2][3]=jlabel30;
        label1[2][4]=jLabel31;
        label1[2][5]=jLabel32;
        label1[2][6]=jLabel33;
        label1[2][7]=jLabel34;
        label1[2][8]=jLabel35;
        label1[2][9]=jLabel36;
        label1[2][10]=jLabel37;
        label1[2][11]=jLabel38;
        label1[2][12]=jLabel39;
        
        label1[3][0]=jLabel40;
        label1[3][1]=jLabel41;
        label1[3][2]=jLabel42;
        label1[3][3]=jLabel43;
        label1[3][4]=jLabel44;
        label1[3][5]=jLabel45;
        label1[3][6]=jLabel47;
        label1[3][7]=jLabel48;
        label1[3][8]=jLabel49;
        label1[3][9]=jLabel50;
        label1[3][10]=jLabel51;
        label1[3][11]=jLabel52;
        label1[3][12]=jLabel53;
        
        label1[4][0]=jLabel54;
        label1[4][1]=jLabel55;
        label1[4][2]=jLabel56;
        label1[4][3]=jLabel57;
        label1[4][4]=jLabel57;
        label1[4][5]=jLabel59;
        label1[4][6]=jLabel60;
        label1[4][7]=jLabel61;
        label1[4][8]=jLabel62;
        label1[4][9]=jLabel63;
        label1[4][10]=jLabel64;
        label1[4][11]=jLabel65;
        label1[4][12]=jLabel66;
        
        label1[5][0]=jLabel67;
        label1[5][1]=jLabel68;
        label1[5][2]=jLabel69;
        label1[5][3]=jLabel70;
        label1[5][4]=jLabel71;
        label1[5][5]=jLabel72;
        label1[5][6]=jLabel73;
        label1[5][7]=jLabel74;
        label1[5][8]=jLabel75;
        label1[5][9]=jLabel76;
        label1[5][10]=jLabel77;
        label1[5][11]=jLabel78;
        label1[5][12]=jLabel79;
        
        label1[6][0]=jLabel80;
        label1[6][1]=jLabel81;
        label1[6][2]=jLabel82;
        label1[6][3]=jLabel83;
        label1[6][4]=jLabel84;
        label1[6][5]=jLabel85;
        label1[6][6]=jLabel86;
        label1[6][7]=jLabel87;
        label1[6][8]=jLabel88;
        label1[6][9]=jLabel89;
        label1[6][10]=jLabel90;
        label1[6][11]=jLabel91;
        label1[6][12]=jLabel92;
        
        label1[7][0]=jLabel93;
        label1[7][1]=jLabel94;
        label1[7][2]=jLabel95;
        label1[7][3]=jLabel96;
        label1[7][4]=jLabel97;
        label1[7][5]=jLabel98;
        label1[7][6]=jLabel99;
        label1[7][7]=jLabel100;
        label1[7][8]=jLabel101;
        label1[7][9]=jLabel102;
        label1[7][10]=jLabel103;
        label1[7][11]=jLabel104;
        label1[7][12]=jLabel105;
        
        label1[8][0]=jLabel106;
        label1[8][1]=jLabel107;
        label1[8][2]=jLabel108;
        label1[8][3]=jLabel109;
        label1[8][4]=jLabel110;
        label1[8][5]=jLabel111;
        label1[8][6]=jLabel112;
        label1[8][7]=jLabel113;
        label1[8][8]=jLabel114;
        label1[8][9]=jLabel115;
        label1[8][10]=jLabel116;
        label1[8][11]=jLabel117;
        label1[8][12]=jLabel118;
        
        label1[9][0]=jLabel119;
        label1[9][1]=jLabel120;
        label1[9][2]=jLabel121;
        label1[9][3]=jLabel122;
        label1[9][4]=jLabel123;
        label1[9][5]=jLabel124;
        label1[9][6]=jLabel125;
        label1[9][7]=jLabel126;
        label1[9][8]=jLabel127;
        label1[9][9]=jLabel128;
        label1[9][10]=jLabel129;
        label1[9][11]=jLabel130;
        label1[9][12]=jLabel131;
        
        label1[10][0]=jLabel132;
        label1[10][1]=jLabel133;
        label1[10][2]=jLabel134;
        label1[10][3]=jLabel135;
        label1[10][4]=jLabel136;
        label1[10][5]=jLabel137;
        label1[10][6]=jLabel138;
        label1[10][7]=jLabel139;
        label1[10][8]=jLabel140;
        label1[10][9]=jLabel141;
        label1[10][10]=jLabel142;
        label1[10][11]=jLabel143;
        label1[10][12]=jLabel144;
    }
    public void dijikstra(String location){
        /*
        int w=enemys_name.size()-1;
                     for(int i=0;i<path.get(w).size();i++){
                         path.get(w).get(i).getLabel().setBackground(Color.WHITE);
                     }
                     */
                    for(int i=0;i<path.size();i++){
                         for(int j=0;j<path.get(i).size();j++){
                             path.get(i).get(j).getLabel().setBackground(Color.WHITE);
                              path.get(i).get(j).getLabel().setForeground(Color.WHITE);
                         }
                     }
                     for(int j=0;j<enemys_name.size();j++){
                         if(enemys_name.get(j).equals("Gargamel")){
                             System.out.println("gargamelee giriÅ  yaptÄ±");
                             for(int i=0;i<dugum.size();i++){
                                  dugum.get(i).setDistance(Double.MAX_VALUE);
                                  dugum.get(i).setVisited(false);
                                  dugum.get(i).setPredecessor(null);
                             }
                             DijkstraShortestPath shortestPath1 = new DijkstraShortestPath();
                             
                             for(int i=0;i<path.get(j).size();i++){
                             
                          //path.get(j).get(i).getLabel().setBackground(Color.WHITE);        
                        
                    
                    if(i==1){
                        
                        
                            if(oyuncu.getAd().equals("tembel")){
                                if(enemy.get(j)==label1[x][y]){
                             puanlar.setSkor(puanlar.getSkor()-15);
                             skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                                    System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            
                        }
                        else{
                            if((enemy.get(j)==white[a] && white[a].getText()=="1") || (enemy.get(j)==white[b] && white[b].getText()=="1") || (enemy.get(j)==white[c] && white[c].getText()=="1") || (enemy.get(j)==white[z] && white[z].getText()=="1") || (enemy.get(j)==white[w] && white[w].getText()=="1") || (enemy.get(j)==white[g] && white[g].getText()=="1")){
                                hidden=enemy.get(j);
                                hidden.setText("1");
                            }
                            enemy.get(j).setIcon(null);
                            enemy.set(j,path.get(j).get(i).getLabel());
                            if(enemy.get(j)==label1[x][y]){
                             puanlar.setSkor(puanlar.getSkor()-15);
                             skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            }    
                        
                         //System.out.println(enemy);                
                          //enemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        }
                            }else{
                                if(enemy.get(j)==label1[x][y] || (((location.equals("right"))||(location.equals("left"))) && label1[x][p]==enemy.get(j)) || (((location.equals("up"))||(location.equals("down"))) && label1[p][y]==enemy.get(j))){
                            puanlar.setSkor(puanlar.getSkor()-15);
                            skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.get(j).setIcon(null);
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            
                        }
                        else{
                            if(enemy.get(j)==white[a] && white[a].getText()=="1" || enemy.get(j)==white[b] && white[b].getText()=="1" || enemy.get(j)==white[c] && white[c].getText()=="1" ||enemy.get(j)==white[z] && white[z].getText()=="1" || enemy.get(j)==white[w] && white[w].getText()=="1" || enemy.get(j)==white[g] && white[g].getText()=="1"){
                                hidden=enemy.get(j);
                                hidden.setText("1");
                            }
                            enemy.get(j).setIcon(null);
                            enemy.set(j,path.get(j).get(i).getLabel());
                            if(enemy.get(j)==label1[x][y]){
                                puanlar.setSkor(puanlar.getSkor()-15);
                                skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                                    System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            }    
                        
                         //System.out.println(enemy);                
                          //enemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        }
                            }
                        
                    }
                    }
                             for(int i=0;i<dugum.size();i++){
                                 if(enemy.get(j)==dugum.get(i).getLabel()){
                                     System.out.println("a");
                                     System.out.println(i);
                                     shortestPath1.computeShortestPaths(dugum.get(i));
                                 }
                             }
                             for(int i=0;i<dugum.size();i++){
                                 if(label1[x][y]==dugum.get(i).getLabel()){
                                     System.out.println("1");
                                     path.set(j,shortestPath1.getShortestPathTo(dugum.get(i)));
                                 }
                             }
                             for(int i=0;i<path.get(j).size();i++){
                        
                              System.out.println(path.get(j).get(i).getLabel().getText());
                             }
                             for(int i=0;i<path.get(j).size();i++){
         if(label1[x][y]==path.get(j).get(i).getLabel()){
             path.get(j).get(i).getLabel().setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/zekisirin.png")));
             path.get(j).get(i).getLabel().setBackground(Color.GRAY);
             path.get(j).get(i).getLabel().setForeground(Color.GRAY);
         }else if(i==0){
             //BURAYA BAKKKKKKKKKKKKKKKK
                   if(enemy.size()>1){
                       if(j==enemys_name.size()-1){
                 for(int m=0;m<path.get(j-1).size();m++){
                 if(path.get(j-1).get(m).getLabel()==enemy.get(j)){
                      path.get(j).get(i).getLabel().setBackground(Color.GRAY);
                      path.get(j).get(i).getLabel().setForeground(Color.GRAY);
                 }
             }
             }
                   }
                         
             enemy.get(j).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
             if((hidden==white[a] || hidden==white[b] ||hidden==white[c] ||hidden==white[z] || hidden==white[w]) && hidden.getText()=="1"){
                 hidden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/altÄ±npara.png")));
             }
             if( hidden==white[g] &&hidden.getText()=="1"){
                 hidden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mantarkafa.png")));
             }
             continue;
         }
         else{
             path.get(j).get(i).getLabel().setBackground(Color.GRAY);
             path.get(j).get(i).getLabel().setForeground(Color.GRAY);
         }
     }
                         }else{
                             for(int i=0;i<dugum.size();i++){
                                  dugum.get(i).setDistance(Double.MAX_VALUE);
                                  dugum.get(i).setVisited(false);
                                  dugum.get(i).setPredecessor(null);
                             }
                             DijkstraShortestPath shortestPath1 = new DijkstraShortestPath();
                             
                             for(int i=0;i<path.get(j).size();i++){
                        
                         // path.get(j).get(i).getLabel().setBackground(Color.WHITE);        
                        
                    
                    if(i==1){
                        
                        if(oyuncu.getAd().equals("tembel")){
                                if(enemy.get(j)==label1[x][y]){
                            puanlar.setSkor(puanlar.getSkor()-5);
                            skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            
                        }
                        else{
                            if(enemy.get(j)==white[a] && white[a].getText()=="1" || enemy.get(j)==white[b] && white[b].getText()=="1" || enemy.get(j)==white[c] && white[c].getText()=="1" ||enemy.get(j)==white[z] && white[z].getText()=="1" || enemy.get(j)==white[w] && white[w].getText()=="1" || enemy.get(j)==white[g] && white[g].getText()=="1"){
                                hidden=enemy.get(j);
                                hidden.setText("1");
                            }
                            enemy.get(j).setIcon(null);
                            enemy.set(j,path.get(j).get(i).getLabel());
                            if(enemy.get(j)==label1[x][y]){
                            puanlar.setSkor(puanlar.getSkor()-5);
                            skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            }    
                        
                         //System.out.println(enemy);                
                          //enemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        }
                            }else{
                                if(enemy.get(j)==label1[x][y] || (((location.equals("right"))||(location.equals("left"))) && label1[x][p]==enemy.get(j)) || (((location.equals("up"))||(location.equals("down"))) && label1[p][y]==enemy.get(j))){
                            enemy.get(j).setIcon(null);
                            puanlar.setSkor(puanlar.getSkor()-5);
                            skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            
                        }
                        else{
                            if(enemy.get(j)==white[a] && white[a].getText()=="1" || enemy.get(j)==white[b] && white[b].getText()=="1" || enemy.get(j)==white[c] && white[c].getText()=="1" ||enemy.get(j)==white[z] && white[z].getText()=="1" || enemy.get(j)==white[w] && white[w].getText()=="1" || enemy.get(j)==white[g] && white[g].getText()=="1"){
                                hidden=enemy.get(j);
                                hidden.setText("1");
                            }
                            enemy.get(j).setIcon(null);
                            enemy.set(j,path.get(j).get(i).getLabel());
                            if(enemy.get(j)==label1[x][y]){
                            puanlar.setSkor(puanlar.getSkor()-5);
                            skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                            System.out.println("skor"+puanlar.getSkor());
                            enemy.set(j,start.get(j));
                            System.out.println("omerrrrr");
                            System.out.println(enemy.get(j).getText());
                            }    
                        
                         //System.out.println(enemy);                
                          //enemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        }
                            }
                    }
                    }
                             for(int i=0;i<dugum.size();i++){
                                 if(enemy.get(j)==dugum.get(i).getLabel()){
                                     System.out.println("a");
                                     shortestPath1.computeShortestPaths(dugum.get(i));
                                 }
                             }
                             for(int i=0;i<dugum.size();i++){
                                 if(label1[x][y]==dugum.get(i).getLabel()){
                                     System.out.println("1");
                                     path.set(j,shortestPath1.getShortestPathTo(dugum.get(i)));
                                 }
                             }
                             for(int i=0;i<path.get(j).size();i++){
                        
                              System.out.println(path.get(j).get(i).getLabel().getText());
                             }
                             for(int i=0;i<path.get(j).size();i++){
         if(label1[x][y]==path.get(j).get(i).getLabel()){
             path.get(j).get(i).getLabel().setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/zekisirin.png")));
             path.get(j).get(i).getLabel().setBackground(Color.GRAY);
             path.get(j).get(i).getLabel().setForeground(Color.GRAY);
         }else if(i==0){
                          if(enemy.size()>1){
                              if(j==enemys_name.size()-1){
                 for(int m=0;m<path.get(j-1).size();m++){
                 if(path.get(j-1).get(m).getLabel()==enemy.get(j)){
                      path.get(j).get(i).getLabel().setBackground(Color.GRAY);
                      path.get(j).get(i).getLabel().setForeground(Color.GRAY);
                 }
             }
             }
                          }
             enemy.get(j).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
             if((hidden==white[a] || hidden==white[b] ||hidden==white[c] ||hidden==white[z] || hidden==white[w]) && hidden.getText()=="1"){
                 hidden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/altÄ±npara.png")));
             }
             if(hidden==white[g] && hidden.getText()=="1"){
                 hidden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mantarkafa.png")));
             }
             continue;
         }
         else{
             path.get(j).get(i).getLabel().setBackground(Color.GRAY);
             path.get(j).get(i).getLabel().setForeground(Color.GRAY);
         }
     }
                         }
                     }
    }
    public void process(){
        
        jLabel73.setIcon(new ImageIcon(img));
        label_tanÄ±mlama();
        int index1;
        int kontrol1=0;
        int indextut=0;
        
             for(int j=0;j<11;j++){
                 for(int m=0;m<13;m++){
                     if(maps[j][m]=='1'){
                         for(int i=0;i<dugum.size();i++){
                             if(label1[j][m]==dugum.get(i).getLabel()){
                                indextut=i;
                             }
                         }
                        index1=m;
                        if(m!=12){
                            index1++;
                          if(maps[j][index1]=='1'){
                            for(int i=0;i<dugum.size();i++){
                                if(label1[j][index1]==dugum.get(i).getLabel()){
                                    dugum.get(indextut).addNeighbour(new Edge(1,dugum.get(indextut),dugum.get(i)));
                                    
                                }
                            } 
                         }
                        }
                        index1=m;
                        if(m!=0){
                            index1--;
                        if(maps[j][index1]=='1'){
                            for(int i=0;i<dugum.size();i++){
                                if(label1[j][index1]==dugum.get(i).getLabel()){
                                    dugum.get(indextut).addNeighbour(new Edge(1,dugum.get(indextut),dugum.get(i)));
                                    
                                }
                            }
                        }
                        }
                        index1=j;
                        if(j!=0){
                            index1--;
                        if(maps[index1][m]=='1'){
                            for(int i=0;i<dugum.size();i++){
                                if(label1[index1][m]==dugum.get(i).getLabel()){
                                    dugum.get(indextut).addNeighbour(new Edge(1,dugum.get(indextut),dugum.get(i)));
                                    
                                }
                            }
                        }
                        }
                        index1=j;
                        if(j!=10){
                            index1++;
                        if(maps[index1][m]=='1'){
                            for(int i=0;i<dugum.size();i++){
                                if(label1[index1][m]==dugum.get(i).getLabel()){
                                    dugum.get(indextut).addNeighbour(new Edge(1,dugum.get(indextut),dugum.get(i)));
                                    
                                }
                            }
                        }
                        }
                     }
                     
                     
                     indextut=0;
                     
                 }
                
             }
            
         int kontrol=0;
         int index=0;
             for(int j=0;j<11;j++){
                 for(int m=0;m<13;m++){
                     if(maps[j][m]=='1'){
                         if((j==0 && m==3)||(j==0 && m==10) || (j==5 && m==0)|| (j==10 && m==3) ){
                             continue;
                         }
                         else{
                             white[index]=label1[j][m];
                             index++;
                             
                         }
                     }
                 }
                 if(index==74){
                         break;
                  }
             }
             
        
        java.util.Timer timer=new java.util.Timer();
           TimerTask gorev=new TimerTask() {
            @Override
            public void run() {
                while(true){
                    int kontrol=0;
                    Random r=new Random();
                    a=r.nextInt(74);
                    b=r.nextInt(74);
                    c=r.nextInt(74);
                    z=r.nextInt(74);
                    w=r.nextInt(74);
                    if(a!=b && a!=c && a!=z && a!=w && b!=c && b!=z && b!=w && z!=c && z!=w && w!=c){
                        kontrol=1;
                        for(int i=0;i<enemy.size();i++){
                            if(enemy.get(i)==white[a] || enemy.get(i)==white[b] || enemy.get(i)==white[c] || enemy.get(i)==white[z] || enemy.get(i)==white[w]){
                              kontrol=0;
                                break;
                            }
                        }
                    }
                    if(kontrol==1){
                        break;
                    }
                }
                        white[a].setForeground(Color.WHITE);
                        white[a].setText("1");
                        white[b].setForeground(Color.WHITE);
                        white[b].setText("1");
                        white[c].setForeground(Color.WHITE);
                        white[c].setText("1");
                        white[z].setForeground(Color.WHITE);
                        white[z].setText("1");
                        white[w].setForeground(Color.WHITE);
                        white[w].setText("1");
                 if(label1[x][y]==white[a] && white[a].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        //puan+=10;
                        //System.out.println("puan:"+puan);
                        white[a].setText("0");
                        white[b].setIcon(new ImageIcon(goldenimg));
                        white[b].setForeground(Color.WHITE);
                        white[b].setText("1");
                        white[c].setIcon(new ImageIcon(goldenimg));
                        white[c].setForeground(Color.WHITE);
                        white[c].setText("1");
                        white[z].setIcon(new ImageIcon(goldenimg));
                        white[z].setForeground(Color.WHITE);
                        white[z].setText("1");
                        white[w].setIcon(new ImageIcon(goldenimg));
                        white[w].setForeground(Color.WHITE);
                        white[w].setText("1");
                    }else if(label1[x][y]==white[b] && white[b].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        //puan+=10;
                        //System.out.println("puan:"+puan);
                        white[b].setText("0");
                        white[a].setIcon(new ImageIcon(goldenimg));
                        white[a].setForeground(Color.WHITE);
                        white[a].setText("1");
                        white[c].setIcon(new ImageIcon(goldenimg));
                        white[c].setForeground(Color.WHITE);
                        white[c].setText("1");
                        white[z].setIcon(new ImageIcon(goldenimg));
                        white[z].setForeground(Color.WHITE);
                        white[z].setText("1");
                        white[w].setIcon(new ImageIcon(goldenimg));
                        white[w].setForeground(Color.WHITE);
                        white[w].setText("1");
                    }else if(label1[x][y]==white[c] && white[c].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                         //puan+=10;
                        //System.out.println("puan:"+puan);
                        white[c].setText("0");
                        white[a].setIcon(new ImageIcon(goldenimg));
                        white[a].setForeground(Color.WHITE);
                        white[a].setText("1");
                        white[b].setIcon(new ImageIcon(goldenimg));
                        white[b].setForeground(Color.WHITE);
                        white[b].setText("1");
                        white[z].setIcon(new ImageIcon(goldenimg));
                        white[z].setForeground(Color.WHITE);
                        white[z].setText("1");
                        white[w].setIcon(new ImageIcon(goldenimg));
                        white[w].setForeground(Color.WHITE);
                        white[w].setText("1");
                    }else if(label1[x][y]==white[z] && white[z].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        //puan+=10;
                        //System.out.println("puan:"+puan);
                        white[z].setText("0");
                        white[a].setIcon(new ImageIcon(goldenimg));
                        white[a].setForeground(Color.WHITE);
                        white[a].setText("1");
                        white[b].setIcon(new ImageIcon(goldenimg));
                        white[b].setForeground(Color.WHITE);
                        white[b].setText("1");
                        white[c].setIcon(new ImageIcon(goldenimg));
                        white[c].setForeground(Color.WHITE);
                        white[c].setText("1");
                        white[w].setIcon(new ImageIcon(goldenimg));
                        white[w].setForeground(Color.WHITE);
                        white[w].setText("1");
                    }else if(label1[x][y]==white[w] && white[w].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+altÄ±n.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        //puan+=10;
                        //System.out.println("puan:"+puan);
                        white[w].setText("0");
                        white[a].setIcon(new ImageIcon(goldenimg));
                        white[a].setForeground(Color.WHITE);
                        white[a].setText("1");
                        white[b].setIcon(new ImageIcon(goldenimg));
                        white[b].setForeground(Color.WHITE);
                        white[b].setText("1");
                        white[z].setIcon(new ImageIcon(goldenimg));
                        white[z].setForeground(Color.WHITE);
                        white[z].setText("1");
                        white[c].setIcon(new ImageIcon(goldenimg));
                        white[c].setForeground(Color.WHITE);
                        white[c].setText("1");
                    }
                    else{
                        white[a].setIcon(new ImageIcon(goldenimg));
                        white[a].setForeground(Color.WHITE);
                        
                        white[b].setIcon(new ImageIcon(goldenimg));
                        white[b].setForeground(Color.WHITE);
                        
                        white[c].setIcon(new ImageIcon(goldenimg));
                        white[c].setForeground(Color.WHITE);
                        
                        white[z].setIcon(new ImageIcon(goldenimg));
                        white[z].setForeground(Color.WHITE);
                        
                        white[w].setIcon(new ImageIcon(goldenimg));
                        white[w].setForeground(Color.WHITE);
                        
                    }
                try {
                        
                        Thread.sleep(5000);
                    if(label1[x][y]==white[a] || label1[x][y]==white[b] || label1[x][y]==white[c] || label1[x][y]==white[w] || label1[x][y]==white[z]){
                       if(label1[x][y]==white[a]){
                        label1[x][y].setIcon(new ImageIcon(img));
                        white[b].setIcon(null);
                        white[b].setText("0");
                        white[c].setIcon(null);
                        white[c].setText("0");
                        white[z].setIcon(null);
                        white[z].setText("0");
                        white[w].setIcon(null);
                        white[w].setText("0");
                        
                        
                    }
                    else if(label1[x][y]==white[b]){
                               label1[x][y].setIcon(new ImageIcon(img));
                               white[a].setIcon(null);
                               white[a].setText("0");
                               white[c].setIcon(null);
                               white[c].setText("0");
                               white[z].setIcon(null);
                               white[z].setText("0");
                               white[w].setIcon(null);
                               white[w].setText("0");
                              
                               
                    }
                    else if(label1[x][y]==white[c]){
                            
                        label1[x][y].setIcon(new ImageIcon(img));
                               white[a].setIcon(null);
                               white[a].setText("0");
                               white[b].setIcon(null);
                               white[b].setText("0");
                               white[z].setIcon(null);
                               white[z].setText("0");
                               white[w].setIcon(null);
                               white[w].setText("0");
                                
                               
                    }else if(label1[x][y]==white[z]){
                            
                        label1[x][y].setIcon(new ImageIcon(img));
                               white[a].setIcon(null);
                               white[a].setText("0");
                               white[b].setIcon(null);
                               white[b].setText("0");
                               white[c].setIcon(null);
                               white[c].setText("0");
                               white[w].setIcon(null);
                               white[w].setText("0");
                               
                               
                    }else if(label1[x][y]==white[w]){
                            
                        label1[x][y].setIcon(new ImageIcon(img));
                               white[a].setIcon(null);
                               white[a].setText("0");
                               white[b].setIcon(null);
                               white[b].setText("0");
                               white[z].setIcon(null);
                               white[z].setText("0");
                               white[c].setIcon(null);
                               white[c].setText("0");
                               
                               
                    }    
                    }
                    else{
                        white[a].setIcon(null);
                        white[b].setIcon(null);
                        white[c].setIcon(null);
                        white[z].setIcon(null);
                        white[w].setIcon(null);
                        white[a].setText("0");
                        white[b].setText("0");
                        white[c].setText("0");
                        white[z].setText("0");
                        white[w].setText("0");
                        
                    }
                    for(int i=0;i<enemy.size();i++){
                        if(enemy.get(i)==white[a] || enemy.get(i)==white[b] || enemy.get(i)==white[c] || enemy.get(i)==white[z] ||enemy.get(i)==white[w]){
                            if(enemys_name.get(i).equals("Gargamel")){
                                enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                            }else{
                                enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
                            }
                        }
                    }
                    
                    
                    
                } catch (InterruptedException ex) {
                    Logger.getLogger(deneme.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        };
          
        timer.schedule(gorev, 1000, 10000);
        
        TimerTask gorev2=new TimerTask() {
            @Override
            public void run() {
                while(true){
                    Random r=new Random();
                    g=r.nextInt(74);
                    int kontrol=0;
                    if(g!=a && g!=b && g!=c){
                        kontrol=1;
                        for(int i=0;i<enemy.size();i++){
                            if(enemy.get(i)==white[g]){
                              kontrol=0;
                                break;
                            }
                        }
                    }
                    if(kontrol==1){
                        break;
                    }
                }
                 white[g].setForeground(Color.WHITE);
                 white[g].setText("1");
                 
                 if(label1[x][y]==white[g] && white[g].getText()=="1"){
                        puanlar.setSkor(oyuncu.getSkor()+mantar.getDeger());
                        skor_tabela.setText(String.valueOf(puanlar.getSkor()));
                        //puan+=50;
                        //System.out.println("puan:"+puan);
                        white[g].setText("0");
                        
                    }
                 else{
                     white[g].setIcon(new ImageIcon(mantarimg));
                 }
                try {
                        
                        Thread.sleep(7000);
                       if(label1[x][y]==white[g]){
                        label1[x][y].setIcon(new ImageIcon(img));
                       // white[g].setIcon(null);
                        white[g].setText("0");
                        
                        
                        
                   
                    }else{
                        white[g].setIcon(null);
                        white[g].setText("0"); 
                        
                    }
                    
                }
                    catch (InterruptedException ex) {
                    Logger.getLogger(deneme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            
        };
        timer.schedule(gorev2,1000,20000);
        
        apply();
    }
    public void apply(){
        DijkstraShortestPath shortestPath = new DijkstraShortestPath();
        
        for(int i=0;i<enemys_name.size();i++){
            if(enemys_name.get(i).equals("Gargamel")){
                System.out.println("hamsiii");
                if(i>0){
                    
                    for(int j=0;j<dugum.size();j++){
                        dugum.get(j).setDistance(Double.MAX_VALUE);
                        dugum.get(j).setVisited(false);
                        dugum.get(j).setPredecessor(null);
                    }
                    
                }
                //o=i;
                if(enemys_gate.get(i).equals("A")){
                        System.out.println("a");
                        enemy.add(jlabel4);
                        //enemy.get(i).setText("gargamel");
                        start.add(jlabel4);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        shortestPath.computeShortestPaths(vertex75);
                    }
                    else if(enemys_gate.get(i).equals("B")){
                        System.out.println("b");
                        enemy.add(jlabel11);
                        //enemy.get(i).setText("gargamel");
                        start.add(jlabel11);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        shortestPath.computeShortestPaths(vertex76);
                    }
                    else if(enemys_gate.get(i).equals("C")){
                        System.out.println("c");
                        enemy.add(jLabel67);
                        //enemy.get(i).setText("gargamel");
                        start.add(jLabel67);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        shortestPath.computeShortestPaths(vertex77);
                    }
                    else if(enemys_gate.get(i).equals("D")){
                        System.out.println("Ä");
                        enemy.add(jLabel135);
                        //enemy.get(i).setText("gargamel");
                        start.add(jLabel135);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/gargamel.png")));
                        shortestPath.computeShortestPaths(vertex78);
                    }
 
     path.add(shortestPath.getShortestPathTo(vertex36));
                System.out.println("omer");
     for(int j=0;j<path.get(i).size();j++){
         System.out.println("************************");
         System.out.println(path.get(i).get(j).getLabel().getText());
         if(j==0){
             continue;
         }
        path.get(i).get(j).getLabel().setBackground(Color.GRAY);
     }
        System.out.println("*****************");
    }else{
                
                if(i>0){
                     for(int j=0;j<dugum.size();j++){
                        dugum.get(j).setDistance(Double.MAX_VALUE);
                        dugum.get(j).setVisited(false);
                        dugum.get(j).setPredecessor(null);
                    }
                }
                //o=i;
                 if(enemys_gate.get(i).equals("A")){
                        System.out.println("a");
                        enemy.add(jlabel4);
                        //enemy.get(i).setText("gargamel");
                        start.add(jlabel4);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
                        System.out.println("dddddddddddddddddddddddddd");
                        shortestPath.computeShortestPaths(vertex75);
                    }
                    else if(enemys_gate.get(i).equals("B")){
                        System.out.println("b");
                        enemy.add(jlabel11);
                        //enemy.get(i).setText("gargamel");
                        start.add(jlabel11);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
                        shortestPath.computeShortestPaths(vertex76);
                    }
                    else if(enemys_gate.get(i).equals("C")){
                        System.out.println("c");
                        enemy.add(jLabel67);
                        //enemy.get(i).setText("gargamel");
                        start.add(jLabel67);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
                        shortestPath.computeShortestPaths(vertex77);
                    }
                    else if(enemys_gate.get(i).equals("D")){
                        System.out.println("Ä");
                        enemy.add(jLabel135);
                        //enemy.get(i).setText("gargamel");
                        start.add(jLabel135);
                        enemy.get(i).setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kedi.png")));
                        shortestPath.computeShortestPaths(vertex78);
                    }
    path.add(shortestPath.getShortestPathTo(vertex36));
                //System.out.println("hakan murat");
     for(int j=0;j<path.get(i).size();j++){
         //System.out.println("Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼Ã¼");
         //System.out.println(path.get(i).get(j).getLabel().getText());
         if(j==0){
             continue;
         }
        path.get(i).get(j).getLabel().setBackground(Color.GRAY);
     }
        //System.out.println("*****************");
    }
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(deneme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(deneme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(deneme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(deneme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new deneme().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel120;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel129;
    private javax.swing.JLabel jLabel130;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel53;
    private javax.swing.JPanel jPanel54;
    private javax.swing.JPanel jPanel55;
    private javax.swing.JPanel jPanel56;
    private javax.swing.JPanel jPanel57;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel59;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel60;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel62;
    private javax.swing.JPanel jPanel63;
    private javax.swing.JPanel jPanel64;
    private javax.swing.JPanel jPanel65;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel67;
    private javax.swing.JPanel jPanel68;
    private javax.swing.JPanel jPanel69;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel70;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel73;
    private javax.swing.JPanel jPanel74;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlabel1;
    private javax.swing.JLabel jlabel10;
    private javax.swing.JLabel jlabel11;
    private javax.swing.JLabel jlabel12;
    private javax.swing.JLabel jlabel13;
    private javax.swing.JLabel jlabel14;
    private javax.swing.JLabel jlabel15;
    private javax.swing.JLabel jlabel16;
    private javax.swing.JLabel jlabel2;
    private javax.swing.JLabel jlabel23;
    private javax.swing.JLabel jlabel24;
    private javax.swing.JLabel jlabel25;
    private javax.swing.JLabel jlabel26;
    private javax.swing.JLabel jlabel28;
    private javax.swing.JLabel jlabel29;
    private javax.swing.JLabel jlabel3;
    private javax.swing.JLabel jlabel30;
    private javax.swing.JLabel jlabel4;
    private javax.swing.JLabel jlabel5;
    private javax.swing.JLabel jlabel6;
    private javax.swing.JLabel jlabel7;
    private javax.swing.JLabel jlabel8;
    private javax.swing.JLabel jlabel9;
    private javax.swing.JLabel skor_tabela;
    // End of variables declaration//GEN-END:variables
}
